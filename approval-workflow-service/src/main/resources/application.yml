# =====================================================================
# üåê Application Configuration
# =====================================================================
spring:
  application:
    name: approval-workflow-service

  main:
    banner-mode: console
    # keep default (don't enable bean overriding)

  kafka:
    bootstrap-servers: localhost:29092

    consumer:
      group-id: workflow-group
      # Don't replay the world on a fresh dev group
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      # Best practice: manual acks only after successful processing
      enable-auto-commit: false
      properties:
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.bwc.approval_workflow_service.dto.TravelRequestProxyDTO
        spring.json.trusted.packages: "*"
        # Good hygiene for transactional producers (if you add them later)
        isolation.level: read_committed

    listener:
      # manual acknowledge after successful Zeebe start
      ack-mode: MANUAL_IMMEDIATE
      missing-topics-fatal: false
      concurrency: 3

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false

# =====================================================================
# ‚öôÔ∏è Server Configuration
# =====================================================================
server:
  port: 8084
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# =====================================================================
# ‚öôÔ∏è Zeebe (Camunda) Client Configuration
# =====================================================================
zeebe:
  client:
    broker:
      gateway-address: 127.0.0.1:26500
    security:
      plaintext: true
    requestTimeout: PT60S
    # ‚úÖ Use ONLY the @Deployment annotation you already have.
    # startup:
    #   deployment:
    #     resources: classpath:bpmn/travel_approval_v4.bpmn

    worker:
      threads: 4
      maxJobsActive: 32
      pollInterval: PT1S
      timeout: PT30S
      defaultName: approval-worker

# =====================================================================
# üìä Actuator & Prometheus
# =====================================================================
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,beans,configprops
      base-path: /actuator
    enabled-by-default: true

  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true

  prometheus:
    metrics:
      export:
        enabled: true

  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
    tags:
      application: ${spring.application.name}
      environment: local
    # üö´ Avoid the Prometheus "same name, different tag keys" warning
    enable:
      executor: false

  info:
    env:
      enabled: true
    git:
      mode: full

# =====================================================================
# üîó External Services
# =====================================================================
services:
  employee:
    url: http://localhost:8081
    connect-timeout: 5000
    read-timeout: 30000

  tasklist:
    url: http://localhost:8082
    connect-timeout: 5000
    read-timeout: 30000

# =====================================================================
# üîå Feign
# =====================================================================
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 30000
        loggerLevel: basic
        retryer: com.bwc.approval_workflow_service.config.CustomRetryer
        errorDecoder: com.bwc.approval_workflow_service.config.CustomErrorDecoder
  circuitbreaker:
    enabled: true
  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048
    response:
      enabled: true

# =====================================================================
# ‚ö° Resilience4j
# =====================================================================
resilience4j:
  circuitbreaker:
    instances:
      employeeService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true

      workflowService:
        registerHealthIndicator: true
        slidingWindowSize: 20
        minimumNumberOfCalls: 10
        waitDurationInOpenState: 30s
        failureRateThreshold: 30

  retry:
    instances:
      employeeService:
        maxAttempts: 3
        waitDuration: 2s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

# =====================================================================
# üìù Logging
# =====================================================================
logging:
  level:
    root: INFO
    io.camunda: INFO
    com.bwc: DEBUG
    org.springframework.kafka: INFO
    org.apache.kafka.clients.consumer: INFO
    org.apache.kafka.clients.producer: INFO
    feign: DEBUG
    org.hibernate: WARN

  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

  file:
    name: logs/approval-workflow-service.log

  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30
      total-size-cap: 1GB
